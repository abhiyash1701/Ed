{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import NavigationContext from\"./NavigationContext\";import{PrivateValueStore}from\"./types\";import UnhandledActionContext from\"./UnhandledActionContext\";PrivateValueStore;export default function useNavigationHelpers(_ref){var onAction=_ref.onAction,getState=_ref.getState,emitter=_ref.emitter,router=_ref.router;var onUnhandledAction=React.useContext(UnhandledActionContext);var parentNavigationHelpers=React.useContext(NavigationContext);return React.useMemo(function(){var dispatch=function dispatch(op){var action=typeof op==='function'?op(getState()):op;var handled=onAction(action);if(!handled){onUnhandledAction===null||onUnhandledAction===void 0?void 0:onUnhandledAction(action);}};var actions=_objectSpread(_objectSpread({},router.actionCreators),CommonActions);var helpers=Object.keys(actions).reduce(function(acc,name){acc[name]=function(){return dispatch(actions[name].apply(actions,arguments));};return acc;},{});return _objectSpread(_objectSpread(_objectSpread({},parentNavigationHelpers),helpers),{},{dispatch:dispatch,emit:emitter.emit,isFocused:parentNavigationHelpers?parentNavigationHelpers.isFocused:function(){return true;},canGoBack:function canGoBack(){var state=getState();return router.getStateForAction(state,CommonActions.goBack(),{routeNames:state.routeNames,routeParamList:{},routeGetIdList:{}})!==null||(parentNavigationHelpers===null||parentNavigationHelpers===void 0?void 0:parentNavigationHelpers.canGoBack())||false;},getParent:function getParent(){return parentNavigationHelpers;},getState:getState});},[emitter.emit,getState,onAction,onUnhandledAction,parentNavigationHelpers,router]);}","map":{"version":3,"names":["CommonActions","React","NavigationContext","PrivateValueStore","UnhandledActionContext","useNavigationHelpers","_ref","onAction","getState","emitter","router","onUnhandledAction","useContext","parentNavigationHelpers","useMemo","dispatch","op","action","handled","actions","_objectSpread","actionCreators","helpers","Object","keys","reduce","acc","name","apply","arguments","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList","routeGetIdList","getParent"],"sources":["C:\\Users\\mailt\\Desktop\\New folder\\Projects\\Ed App\\node_modules\\@react-navigation\\core\\lib\\module\\useNavigationHelpers.tsx"],"sourcesContent":["import {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationContext from './NavigationContext';\nimport { NavigationHelpers, NavigationProp, PrivateValueStore } from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter<any>;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({ onAction, getState, emitter, router }: Options<State, Action>) {\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n\n  return React.useMemo(() => {\n    const dispatch = (op: Action | ((state: State) => Action)) => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n\n      const handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction?.(action);\n      }\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n      (acc, name) => {\n        // @ts-expect-error: name is a valid key, but TypeScript is dumb\n        acc[name] = (...args: any) => dispatch(actions[name](...args));\n        return acc;\n      },\n      {}\n    );\n\n    return {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n            routeGetIdList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n      getParent: () => parentNavigationHelpers as any,\n      getState,\n    } as NavigationHelpers<ParamListBase, EventMap> &\n      (NavigationProp<ParamListBase, string, any, any, any> | undefined) &\n      ActionHelpers;\n  }, [\n    emitter.emit,\n    getState,\n    onAction,\n    onUnhandledAction,\n    parentNavigationHelpers,\n    router,\n  ]);\n}\n"],"mappings":"w0BAAA,OACEA,aADF,KAMO,2BANP,CAOA,MAAO,GAAK,CAAAC,KAAZ,KAAuB,OAAvB,CAEA,MAAO,CAAAC,iBAAP,2BACA,OAA4CC,iBAA5C,eACA,MAAO,CAAAC,sBAAP,gCAKAD,iBAAiB,CAajB,cAAe,SAAS,CAAAE,oBAATA,CAAAC,IAAA,CAKoD,IAA/D,CAAAC,QAAF,CAAiED,IAAA,CAA/DC,QAAF,CAAYC,QAAZ,CAAiEF,IAAA,CAArDE,QAAZ,CAAsBC,OAAtB,CAAiEH,IAAA,CAA3CG,OAAtB,CAA+BC,MAAA,CAAkCJ,IAAA,CAAlCI,MAAA,CAC/B,GAAM,CAAAC,iBAAiB,CAAGV,KAAK,CAACW,UAAN,CAAiBR,sBAAjB,CAA1B,CACA,GAAM,CAAAS,uBAAuB,CAAGZ,KAAK,CAACW,UAAN,CAAiBV,iBAAjB,CAAhC,CAEA,MAAO,CAAAD,KAAK,CAACa,OAAN,CAAc,UAAM,CACzB,GAAM,CAAAC,QAAQ,CAAI,QAAZ,CAAAA,QAAQA,CAAIC,EAAD,CAA6C,CAC5D,GAAM,CAAAC,MAAM,CAAG,MAAO,CAAAD,EAAP,GAAc,UAAd,CAA2BA,EAAE,CAACR,QAAQ,EAAT,CAA7B,CAA4CQ,EAA3D,CAEA,GAAM,CAAAE,OAAO,CAAGX,QAAQ,CAACU,MAAD,CAAxB,CAEA,GAAI,CAACC,OAAL,CAAc,CACZP,iBAAiB,OAAjB,EAAAA,iBAAiB,SAAjB,QAAAA,iBAAiB,CAAGM,MAAH,CAAjB,CACD,CACF,CARD,CAUA,GAAM,CAAAE,OAAO,CAAAC,aAAA,CAAAA,aAAA,IACRV,MAAM,CAACW,cADI,EAEXrB,aAAA,CAFL,CAKA,GAAM,CAAAsB,OAAO,CAAGC,MAAM,CAACC,IAAP,CAAYL,OAAZ,EAAqBM,MAArB,CACd,SAACC,GAAD,CAAMC,IAAN,CAAe,CAEbD,GAAG,CAACC,IAAD,CAAH,CAAY,iBAAkB,CAAAZ,QAAQ,CAACI,OAAO,CAACQ,IAAD,CAAP,CAAAC,KAAA,CAAAT,OAAO,CAAOU,SAAd,CAAD,CAA1B,EAAZ,CACA,MAAO,CAAAH,GAAP,CACD,CALa,CAMd,EANc,CAAhB,CASA,OAAAN,aAAA,CAAAA,aAAA,CAAAA,aAAA,IACKP,uBADE,EAEFS,OAFE,MAGLP,QAHK,CAGLA,QAHK,CAILe,IAAI,CAAErB,OAAO,CAACqB,IAJT,CAKLC,SAAS,CAAElB,uBAAuB,CAC9BA,uBAAuB,CAACkB,SADM,CAE9B,iBAAM,KAPL,GAQLC,SAAS,CAAE,SAAAA,UAAA,CAAM,CACf,GAAM,CAAAC,KAAK,CAAGzB,QAAQ,EAAtB,CAEA,MACE,CAAAE,MAAM,CAACwB,iBAAP,CAAyBD,KAAzB,CAAgCjC,aAAa,CAACmC,MAAd,EAAhC,CAAkE,CAChEC,UAAU,CAAEH,KAAK,CAACG,UAD8C,CAEhEC,cAAc,CAAE,EAFgD,CAGhEC,cAAc,CAAE,EAHgD,CAAlE,IAIO,IAJP,GAKAzB,uBALA,SAKAA,uBALA,iBAKAA,uBAAuB,CAAEmB,SAAzB,EALA,GAMA,KAPF,CASD,CApBI,CAqBLO,SAAS,CAAE,SAAAA,UAAA,QAAM,CAAA1B,uBArBZ,GAsBLL,QAAA,CAAAA,QAAA,GAIH,CAnDM,CAmDJ,CACDC,OAAO,CAACqB,IADP,CAEDtB,QAFC,CAGDD,QAHC,CAIDI,iBAJC,CAKDE,uBALC,CAMDH,MANC,CAnDI,CAAP,CA2DD"},"metadata":{},"sourceType":"module","externalDependencies":[]}